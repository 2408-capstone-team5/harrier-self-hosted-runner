schemaVersion: "0.3"
description: Manage ephemeral GitHub Action runner EC2 lifecycle
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  InstanceId:
    type: String
    description: The ID of the specific EC2 instance
  TimeoutMinutes:
    type: String
    description: Time to keep the EC2 running after a workflow event
    default: 1
  MainScript:
    type: String
    description: the main script
  AutomationAssumeRole:
    type: String
    description: The ARN of the role that allows Automation to perform the actions

mainSteps:
  - name: StartInstance
    action: aws:changeInstanceState
    inputs:
      InstanceIds: ["{{ InstanceId }}"]
      DesiredState: running

  - name: RunStartupScript
    action: aws:runCommand
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds: ["{{ InstanceId }}"]
      Parameters:
        commands: ["{{ MainScript }}"]

  - name: WaitForTimeout
    action: aws:sleep
    inputs:
      Duration: PT{{ TimeoutMinutes }}M

  - name: StopInstance
    action: aws:changeInstanceState
    inputs:
      InstanceIds: ["{{ InstanceId }}"]
      DesiredState: stopped
